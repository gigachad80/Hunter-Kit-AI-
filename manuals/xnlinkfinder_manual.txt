Arg	Long Arg	Description
-i	--input	Input a: URL, text file of URLs, a Directory of files to search, a Burp XML output file, a ZAP output file, or a Caido CSV, or a single file to search contents.
-o	--output	The file to save the Links output to, including path if necessary (default: output.txt). If set to cli then output is only written to STDOUT. If the file already exist it will just be appended to (and de-duplicated) unless option -ow is passed.
-op	--output-params	The file to save the Potential Parameters output to, including path if necessary (default: parameters.txt). If set to cli then output is only written to STDOUT (but not piped to another program). If the file already exist it will just be appended to (and de-duplicated) unless option -ow is passed.
-owl	--output-wordlist	The file to save the target specific Wordlist output to, including path if necessary (default: No wordlist output). If set to cli then output is only written to STDOUT (but not piped to another program). If the file already exist it will just be appended to (and de-duplicated) unless option -ow is passed.
-oo	--output-oos	The file to save the out of scope links output to, including path if necessary (default: No OOS output). If set to cli then output is only written to STDOUT (but not piped to another program). If the file already exist it will just be appended to (and de-duplicated) unless option -ow is passed.
-ow	--output-overwrite	If the output file already exists, it will be overwritten instead of being appended to.
-sp	--scope-prefix	Any links found starting with / will be prefixed with scope domains in the output instead of the original link. If the passed value is a valid file name, that file will be used, otherwise the string literal will be used.
-spo	--scope-prefix-original	If argument -sp is passed, then this determines whether the original link starting with / is also included in the output (default: false)
-spkf	--scope-prefix-keep-failed	If argument -spkf is passed, then this determines whether a prefixed link will be kept in the output if it was a 404 or a RequestException occurs (default: false)
-sf	--scope-filter	Will filter output links to only include them if the domain of the link is in the scope specified. If the passed value is a valid file name, that file will be used, otherwise the string literal will be used. This argument is now mandatory if input is a domain/URL (or file of domains/URLs) to prevent crawling sites that are not in scope and also preventing misleading results.
-c	--cookies †	Add cookies to pass with HTTP requests. Pass in the format 'name1=value1; name2=value2;'
-H	--headers †	Add custom headers to pass with HTTP requests. Pass in the format 'Header1: value1; Header2: value2;'
-ra	--regex-after	RegEx for filtering purposes against found endpoints before output (e.g. /api/v[0-9]\.[0-9]\* ). If it matches, the link is output.
-d	--depth †	The level of depth to search. For example, if a value of 2 is passed, then all links initially found will then be searched for more links (default: 1). This option is ignored for Burp files, ZAP files and Caido files because they can be huge and consume lots of memory. It is also advisable to use the -sp (--scope-prefix) argument to ensure a request to links found without a domain can be attempted.
-p	--processes †	Basic multithreading is done when getting requests for a URL, or file of URLs (not a Burp file, ZAP file or Caido file). This argument determines the number of processes (threads) used (default: 25)
-x	--exclude	Additional Link exclusions (to the list in config.yml) in a comma separated list, e.g. careers,forum
-orig	--origin	Whether you want the origin of the link to be in the output. Displayed as LINK-URL [ORIGIN-URL] in the output (default: false)
-prefixed		Whether you want to see which links were prefixed in the output. Displays (PREFIXED) after link and origin in the output (default: false)
-xrel	--exclude-relative-links	By default, if any links in the results start with ./ or ../, they will be included. If this argument is used, these relative links will not be added.
-t	--timeout †	How many seconds to wait for the server to send data before giving up (default: 10 seconds)
-inc	--include	Include input (-i) links in the output (default: false)
-u	--user-agent †	What User Agents to get links for, e.g. -u desktop mobile. Possible values are desktop, mobile, set-top-boxes and game-console. Also there are mobile-apple, mobile-android and mobile-windows that are subsets of mobile but can be used separately.
-uc	--user-agent-custom †	A custom User Agent string to use for all requests. This will override the -u/--user-agent argument. This can be used when a program requires a specific User Agent header to identify you for example.
-insecure	†	Whether TLS certificate checks should be disabled when making requests (delfault: false)
-s429	†	Stop when > 95 percent of responses return 429 Too Many Requests (default: false)
-s403	†	Stop when > 95 percent of responses return 403 Forbidden (default: false)
-sTO	†	Stop when > 95 percent of requests time out (default: false)
-sCE	†	Stop when > 95 percent of requests have connection errors (default: false)
-m	--memory-threshold	The memory threshold percentage. If the machines memory goes above the threshold, the program will be stopped and ended gracefully before running out of memory (default: 95)
-mfs	--max-file-size †	The maximum file size (in bytes) of a file to be checked if -i is a directory. If the file size is over, it will be ignored (default: 500 MB). Setting to 0 means no files will be ignored, regardless of size.
-rp	--replay-proxy†	For active link finding with URL (or file of URLs), replay the requests through this proxy.
-ascii-only		Whether links and parameters will only be added if they only contain ASCII characters. This can be useful when you know the target is likely to use ASCII characters and you also get a number of false positives from binary files for some reason.
-mtl	--max-time-limit	The maximum time limit (in minutes) to run before stopping (default: 0). If 0 is passed, there is no limit.
--config	Path to the YML config file. If not passed, it looks for file config.yml in the default directory, typically ~/.config/xnLinkFinder.
-nwlpl	--no-wordlist-plurals	When words are found for a target specific wordlist, by default new words are added if there is a singular word from a plural, and vice versa. If this argument is used, this process is not done.
-nwlpw	--no-wordlist-pathwords	By default, any path words found in the links will be processed for the target specific wordlist. If this argument is used, they will not be processed. NOTE: if the YAML config value of respParamPathWords is True then this argument will not have any effect unless -nwlpm/--no-wordlist-parameters is also passed.
-nwlpm	--no-wordlist-parameters	By default, any parameters found in the links will be processed for the target specific wordlist. If this argument is used, they will not be processed.
-nwlc	--no-wordlist-comments	By default, any comments in pages will be processed for the target specific wordlist. If this argument is used, they will not be processed.
-nwlia	--no-wordlist-imgalt	By default, any image 'alt' attributes will be processed for the target specific wordlist. If this argument is used, they will not be processed.
-nwld	--no-wordlist-digits	Exclude any words from the target specific wordlist with numerical digits in.
-nwll	--no-wordlist-lowercase	By default, any word added with any uppercase characters in will also add the word in lowercase. If this argument is used, the lowercase words will not be added.
-wlml	--wordlist-maxlen	The maximum length of words to add to the target specific wordlist, excluding plurals (default: 0 - no limit)
-swf	--stopwords-file	A file of additional Stop Words (in addition to "stopWords" in the YML Config file) used to exclude words from the target specific wordlist. Stop Words are used in Natural Language Processing and different lists can be found in different libraries. You may want to add words in different languages, depending on your target.
-brt	--burpfile-remove-tags	When the input passed with -i is a Burp file, the user is asked interactively whether they want to remove unnecessary tags from that file (sometimes there is a problem in Burp XML files that can often be resolved by removing unnecessary tags which will also make the file smaller). If you are using xnLinkFinder in a script, you don't want to break for user input, so you can set that by passing this argument with a true or false. NOTE: This is a permanent change to the file
-all	--all-tlds	All links found will be returned, even if the TLD is not common. This can result in a number of false positives where variable names, etc. may also be a possible genuine domain. By default, only links that have a TLD in the common TLDs (commonTLDs in config.yml) will be returned.
-cl	--content-length	Show the Content-Length of the response when crawling.
-nb	--no-banner	Hides the tool banner.
-v	--verbose	Verbose output
-vv	--vverbose	Increased verbose output
--version	Show current version number.
-h	--help	show the help message and exit`